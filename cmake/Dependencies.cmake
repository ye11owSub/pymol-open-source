include_guard()

set(PYMOL_DEF_MACROS "")
set(PYMOL_INC_DIRS "")
set(PYMOL_LIBS "")
set(PYMOL_COMPILE_OPTIONS "")

if(DEFINED ENV{CONDA_PREFIX})

  set(CONDA_PREFIX $ENV{CONDA_PREFIX})
  message(STATUS "Found Conda prefix: ${CONDA_PREFIX}")

  if(WIN32)
    set(CONDA_LIBRARY_DIR ${CONDA_PREFIX}/Library/lib)
    set(CONDA_INCLUDE_DIR ${CONDA_PREFIX}/Library/include)
    set(CONDA_CMAKE_DIR ${CONDA_PREFIX}/Library/lib/cmake)
  else()
    set(CONDA_LIBRARY_DIR ${CONDA_PREFIX}/lib)
    set(CONDA_INCLUDE_DIR ${CONDA_PREFIX}/include)
    set(CONDA_CMAKE_DIR ${CONDA_PREFIX}/lib/cmake)
  endif()

  list(APPEND CMAKE_PREFIX_PATH ${CONDA_PREFIX} ${CONDA_CMAKE_DIR})
  list(APPEND CMAKE_LIBRARY_PATH ${CONDA_LIBRARY_DIR})
  list(APPEND CMAKE_INCLUDE_PATH ${CONDA_INCLUDE_DIR})

endif()

find_package(Python REQUIRED COMPONENTS Interpreter Development NumPy)
include(dependencies/Freetype)
include(dependencies/Png)

include(dependencies/GL)
if(PYMOL_LIBXML2)
  include(dependencies/XML2)
endif()
if(PYMOL_USE_OPENMP)
  include(dependencies/OpenMP)
endif()
if(PYMOL_TESTING)
  include(dependencies/Testing)
endif()
if(PYMOL_OPENVR)
  include(dependencies/OpenVR)
endif()
if(PYMOL_VMD_PLUGINS)
  include(dependencies/VMDPlugins)
endif()
if(PYMOL_USE_VTKM)
  include(dependencies/VTKM)
endif()
if(PYMOL_USE_MSGPACKC)
  include(dependencies/MsgPack)
else()
  list(APPEND PYMOL_DEF_MACROS "_PYMOL_NO_MSGPACKC")
endif()
